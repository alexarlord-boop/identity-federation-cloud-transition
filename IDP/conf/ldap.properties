
# LDAP pool configuration, used for both authn and DN resolution
idp.pool.LDAP.minSize                          = 3
idp.pool.LDAP.maxSize                          = 10
#idp.pool.LDAP.validateOnCheckout               = false
idp.pool.LDAP.validatePeriodically             = true
idp.pool.LDAP.validatePeriod                   = PT5M
#idp.pool.LDAP.validateDN                       =
idp.pool.LDAP.validateFilter                   = (objectClass=*)
#idp.pool.LDAP.prunePeriod                      = PT5M
#idp.pool.LDAP.idleTime                         = PT10M
#idp.pool.LDAP.blockWaitTime                    = PT3S


## Authenticator strategy, either anonSearchAuthenticator, bindSearchAuthenticator, directAuthenticator, adAuthenticator
idp.authn.LDAP.authenticator = bindSearchAuthenticator
idp.authn.LDAP.ldapURL = ldap://openldap:389
idp.attribute.resolver.LDAP.ldapURL = ldap://openldap:389 
idp.attribute.resolver.LDAP.connectTimeout = PT3S
idp.attribute.resolver.LDAP.responseTimeout = PT3S
idp.authn.LDAP.useStartTLS = false
# idp.authn.LDAP.sslConfig = certificateTrust
# idp.authn.LDAP.trustCertificates = %{idp.home}/credentials/ldap-server.crt # /opt/shibboleth-idp/credentials/ldap-server.crt

# List of attributes to request during authentication
idp.authn.LDAP.returnAttributes = passwordExpirationTime,loginGraceRemaining
idp.authn.LDAP.baseDN = ou=people,dc=example,dc=org
idp.authn.LDAP.subtreeSearch = false
idp.authn.LDAP.bindDN = cn=idpuser,ou=system,dc=example,dc=org
idp.attribute.resolver.LDAP.bindDN = cn=idpuser,ou=system,dc=example,dc=org
idp.attribute.resolver.LDAP.baseDN = ou=people,dc=example,dc=org

# The userFilter is used to locate a directory entry to bind against for LDAP authentication.
idp.authn.LDAP.userFilter = (uid={user})

idp.attribute.resolver.LDAP.useStartTLS         = %{idp.authn.LDAP.useStartTLS:true}
idp.attribute.resolver.LDAP.trustCertificates   = %{idp.authn.LDAP.trustCertificates:undefined}

# The 'searchFilter' is is used to find user attributes from an LDAP source
idp.attribute.resolver.LDAP.searchFilter        = (uid=$resolutionContext.principal)

# List of attributes produced by the Data Connector that should be directly exported as resolved IdPAttributes without requiring any <AttributeDefinition>
# The 'exportAttributes' contains a list space-separated of attributes to retrieve directly from the directory service.
idp.attribute.resolver.LDAP.exportAttributes    = uid cn sn givenName mail eduPersonAffiliation